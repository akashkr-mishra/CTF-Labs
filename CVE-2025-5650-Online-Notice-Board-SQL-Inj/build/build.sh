#!/bin/bash

# ========== Basic Configuration ==========
HOSTNAME="noticeboard"
PROOF_FILENAME="proof.txt"
PROOF_CONTENT="f29e9a327db2c4c3bd5d1df265d2a19a"
MYSQL_ROOT_PASSWORD="toor"
DB_NAME="online_notice_board"
DB_USER="notice_user"
DB_PASS="notice123"
PROJECT_ZIP="https://1000projects.org/wp-content/uploads/2018/06/Online-School-Notice-Board-System-master.zip"

# ========== System Update ==========
apt update -y && apt upgrade -y

# ========== Install Dependencies ==========
apt install -y apache2 php php-mysql mariadb-server unzip wget curl

# ========== MySQL Setup ==========
mysql -e "ALTER USER 'root'@'localhost' IDENTIFIED BY '${MYSQL_ROOT_PASSWORD}'; FLUSH PRIVILEGES;"
mysql -uroot -p"${MYSQL_ROOT_PASSWORD}" <<EOF
DROP DATABASE IF EXISTS ${DB_NAME};
CREATE DATABASE ${DB_NAME};
DROP USER IF EXISTS '${DB_USER}'@'localhost';
CREATE USER '${DB_USER}'@'localhost' IDENTIFIED BY '${DB_PASS}';
GRANT ALL PRIVILEGES ON ${DB_NAME}.* TO '${DB_USER}'@'localhost';
FLUSH PRIVILEGES;
EOF

# ========== Setup Web Root ==========
rm -rf /var/www/html/*
cd /var/www/html
wget -q -O project.zip "$PROJECT_ZIP"
unzip -q project.zip && rm project.zip
mv Online-*/* . 2>/dev/null || true
rm -rf Online-*

# ========== Patch db.php ==========
cat > db.php <<EOF
<?php
\$connection = mysqli_connect("localhost", "root", "toor", "online_notice_board");
if (!\$connection) {
    die("Database connection failed: " . mysqli_connect_error());
}
?>
EOF

# Remove any accidental self-include
sed -i '/include.*db\.php/d' /var/www/html/db.php

# ========== Replace only the top PHP block in register.php ==========
REGISTER_FILE="/var/www/html/register.php"
TMP_REGISTER="/tmp/register_temp.php"

cat > "$TMP_REGISTER" <<'EOF'
<?php
// Correct connection
$connection = mysqli_connect("localhost", "root", "toor", "online_notice_board");
if (!$connection) {
    die("Database connection failed: " . mysqli_connect_error());
}
if (isset($_POST['register'])) {
    $query = "INSERT INTO users VALUES (NULL, '$_POST[fname]', '$_POST[lname]', '$_POST[email]', '$_POST[password]', $_POST[class])";
    $query_run = mysqli_query($connection, $query);

    if ($query_run) {
        echo "<script>alert('Registration successful... You may now login.');
        window.location.href = 'index.php';
        </script>";
    } else {
        echo "<script>alert('Registration failed... Try again.');
        window.location.href = 'register.php';
        </script>";
    }
}
?>
EOF

# Append the original HTML part of register.php
awk 'BEGIN{found=0} /<\!DOCTYPE/{found=1} found{print}' "$REGISTER_FILE" >> "$TMP_REGISTER"
mv "$TMP_REGISTER" "$REGISTER_FILE"

# ========== Replace only the top PHP block in index.php ==========
INDEX_FILE="/var/www/html/index.php"
TMP_INDEX="/tmp/index_temp.php"

# Create a backup first
cp "$INDEX_FILE" "${INDEX_FILE}.backup"

# Use sed to extract everything after the first PHP block
sed -n '/^<?php/,/^?>/{
  /^<?php/d
  /^?>/{
    n
    :loop
    p
    n
    b loop
  }
  d
}' "$INDEX_FILE" > "$TMP_INDEX.rest"

# If that didn't work, try a different approach
if [ ! -s "$TMP_INDEX.rest" ]; then
    # Find the first ?> and get everything after it
    sed -n '/^?>/,$p' "$INDEX_FILE" | tail -n +2 > "$TMP_INDEX.rest"
fi

# If still empty, extract HTML content manually
if [ ! -s "$TMP_INDEX.rest" ]; then
    grep -A 1000 "<!DOCTYPE\|<html\|<HTML" "$INDEX_FILE" > "$TMP_INDEX.rest" 2>/dev/null || true
fi

# Add the correct connection block on top - FIXED: Added missing password parameter
cat > "$TMP_INDEX" <<'EOF'
<?php
$connection = mysqli_connect("localhost", "root", "toor", "online_notice_board");
if (!$connection) {
    die("Database connection failed: " . mysqli_connect_error());
}
?>
EOF

# Append the HTML content
cat "$TMP_INDEX.rest" >> "$TMP_INDEX"
mv "$TMP_INDEX" "$INDEX_FILE"
rm -f "$TMP_INDEX.rest"

# If the file is still empty or too small, restore from backup and try simple replacement
if [ ! -s "$INDEX_FILE" ] || [ $(wc -l < "$INDEX_FILE") -lt 10 ]; then
    echo "Warning: index.php modification failed, trying simple replacement..."
    cp "${INDEX_FILE}.backup" "$INDEX_FILE"
    
    # Simple find and replace approach
    if grep -q "mysqli_connect" "$INDEX_FILE"; then
        sed -i 's/mysqli_connect([^)]*)/mysqli_connect("localhost", "root", "toor", "online_notice_board")/g' "$INDEX_FILE"
    else
        # If no mysqli_connect found, prepend our connection block
        cat > "$TMP_INDEX" <<'EOF'
<?php
$connection = mysqli_connect("localhost", "root", "toor", "online_notice_board");
if (!$connection) {
    die("Database connection failed: " . mysqli_connect_error());
}
?>
EOF
        cat "$INDEX_FILE" >> "$TMP_INDEX"
        mv "$TMP_INDEX" "$INDEX_FILE"
    fi
fi

# Clean up backup
rm -f "${INDEX_FILE}.backup"

# ========== Create Database Structure ==========
mysql -uroot -p"${MYSQL_ROOT_PASSWORD}" "$DB_NAME" <<EOF
CREATE TABLE IF NOT EXISTS users (
    uid INT AUTO_INCREMENT PRIMARY KEY,
    fname VARCHAR(100) NOT NULL,
    lname VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL,
    password VARCHAR(100) NOT NULL,
    class INT NOT NULL
);

CREATE TABLE IF NOT EXISTS admins (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(250) NOT NULL,
    email VARCHAR(100) NOT NULL,
    password VARCHAR(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS notice (
    nid INT AUTO_INCREMENT PRIMARY KEY,
    post_date DATE NOT NULL,
    to_whom VARCHAR(100) NOT NULL,
    title VARCHAR(250) NOT NULL,
    message TEXT NOT NULL
);

INSERT INTO admins (name, email, password) VALUES
('admin', 'admin@gmail.com', 'admin@123');

INSERT INTO users (fname, lname, email, password, class) VALUES
('Kiran', 'Tamang', 'kiran@gmail.com', '12345', 12);

INSERT INTO notice (post_date, to_whom, title, message) VALUES
('2022-06-24', 'To All', 'About Fee', 'Please pay your fees before due date.');
EOF

# ========== Secure Proof.txt in MySQL-readable Location ==========
mkdir -p /var/lib/mysql-files
echo "$PROOF_CONTENT" > /var/lib/mysql-files/$PROOF_FILENAME
chmod 644 /var/lib/mysql-files/$PROOF_FILENAME
chown mysql:mysql /var/lib/mysql-files/$PROOF_FILENAME

# ========== Permissions & Apache Config ==========
chown -R www-data:www-data /var/www/html
chmod -R 755 /var/www/html
a2enmod rewrite

cat <<EOF > /etc/apache2/sites-available/000-default.conf
<VirtualHost *:80>
    DocumentRoot /var/www/html

    <Directory /var/www/html>
        Options Indexes FollowSymLinks
        AllowOverride All
        Require all granted
    </Directory>

    ErrorLog \${APACHE_LOG_DIR}/error.log
    CustomLog \${APACHE_LOG_DIR}/access.log combined
</VirtualHost>
EOF

systemctl enable apache2
systemctl restart apache2
systemctl restart mariadb

# ========== Set Hostname ==========
hostnamectl set-hostname "$HOSTNAME"